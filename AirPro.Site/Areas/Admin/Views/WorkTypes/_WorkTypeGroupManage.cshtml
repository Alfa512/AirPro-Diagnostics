@using AirPro.Site.Helpers
@model AirPro.Site.Areas.Admin.Models.WorkTypes.WorkTypeGroupViewModel

@if (Model?.UpdateResult?.Success ?? false)
{
    <script type="text/javascript">
        $(document)
            .ready(function() {
                try {
                    refreshWorkTypeGroups();
                    refreshWorkTypes();
                    updateComplete("@Html.UpdateResultAlert(Model?.UpdateResult)");
                } catch (e) {
                    console.log(e.message);
                }
            });
    </script>
}
else
{
    @Html.UpdateResultAlert(Model?.UpdateResult)
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.WorkTypeGroupId)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.WorkTypeGroupName, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.WorkTypeGroupName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorkTypeGroupName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WorkTypeGroupSortOrder, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.WorkTypeGroupSortOrder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorkTypeGroupSortOrder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WorkTypesAssigned, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9 form-control-static">
                @Html.DisplayFor(model => model.WorkTypesAssigned)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WorkTypeGroupActiveInd, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <div class="checkbox">
                    @Html.EditorFor(model => model.WorkTypeGroupActiveInd)
                    @Html.ValidationMessageFor(model => model.WorkTypeGroupActiveInd, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

    </div>
}
