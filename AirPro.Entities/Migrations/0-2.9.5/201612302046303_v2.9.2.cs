using System.Reflection;
using UniMatrix.Common.Extensions;

namespace AirPro.Entities.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class v292 : DbMigration
    {
        public override void Up()
        {
            // Cleanup.
            Sql(@"declare @table nvarchar(128), @name nvarchar(128)
                select @table = object_name(parent_object_id), @name = name
                from sys.default_constraints
                where object_name(parent_object_id) = 'Orders'
	                and col_name(parent_object_id, parent_column_id) = 'CreatedByUserId'
                if (@name is not null)
                execute('alter table Repair.Orders drop constraint ' + @name + ';')");

            DropForeignKey("Repair.Invoices", "InvoicedById", "Access.Users");
            DropForeignKey("Scan.Reports", "InvoicedBy_Id", "Access.Users");
            DropForeignKey("Scan.Reports", "ResponsibleTechnicianId", "Access.Users");
            DropForeignKey("Scan.ReportsArchive", "InvoicedById", "Access.Users");
            DropForeignKey("Scan.ReportsArchive", "InvoicedBy_Id", "Access.Users");
            DropForeignKey("Scan.ReportsArchive", "ResponsibleTechnicianId", "Access.Users");
            DropForeignKey("Billing.Payments", "PaymentVoidById", "Access.Users");
            DropForeignKey("Billing.PaymentTransactions", "PaymentTransactionVoidById", "Access.Users");
            DropForeignKey("Repair.Orders", "CreatedBy_Id", "Access.Users");
            DropForeignKey("Repair.Invoices", "CreatedBy_Id", "Access.Users");
            DropForeignKey("Repair.Invoices", "UpdatedBy_Id", "Access.Users");
            DropForeignKey("Scan.Requests", "CreatedBy_Id", "Access.Users");
            DropForeignKey("Scan.Reports", "CreatedBy_Id", "Access.Users");
            DropForeignKey("Scan.Reports", "UpdatedBy_Id", "Access.Users");
            DropForeignKey("Scan.ReportsArchive", "CreatedBy_Id", "Access.Users");
            DropForeignKey("Scan.ReportsArchive", "UpdatedBy_Id", "Access.Users");
            DropForeignKey("Scan.RequestTypes", "CreatedBy_Id", "Access.Users");
            DropForeignKey("Scan.RequestTypes", "UpdatedBy_Id", "Access.Users");
            DropForeignKey("Scan.Requests", "UpdatedBy_Id", "Access.Users");
            DropForeignKey("Repair.Orders", "UpdatedBy_Id", "Access.Users");
            DropForeignKey("Access.Accounts", "CreatedBy_Id", "Access.Users");
            DropForeignKey("Access.Accounts", "UpdatedBy_Id", "Access.Users");
            DropForeignKey("Access.GroupRoles", "CreatedBy_Id", "Access.Users");
            DropForeignKey("Access.Groups", "CreatedBy_Id", "Access.Users");
            DropForeignKey("Access.Groups", "UpdatedBy_Id", "Access.Users");
            DropForeignKey("Access.GroupRoles", "UpdatedBy_Id", "Access.Users");
            DropForeignKey("Support.NotificationTemplates", "CreatedBy_Id", "Access.Users");
            DropForeignKey("Support.NotificationTemplates", "UpdatedBy_Id", "Access.Users");
            DropForeignKey("Billing.Payments", "CreatedBy_Id", "Access.Users");
            DropForeignKey("Billing.Payments", "UpdatedBy_Id", "Access.Users");
            DropForeignKey("Billing.PaymentTransactions", "CreatedBy_Id", "Access.Users");
            DropForeignKey("Billing.PaymentTransactions", "UpdatedBy_Id", "Access.Users");
            DropForeignKey("Access.UserAccounts", "CreatedBy_Id", "Access.Users");
            DropForeignKey("Access.UserAccounts", "UpdatedBy_Id", "Access.Users");
            DropForeignKey("Access.UserGroups", "CreatedBy_Id", "Access.Users");
            DropForeignKey("Access.UserGroups", "UpdatedBy_Id", "Access.Users");
            DropForeignKey("Access.UserShops", "CreatedBy_Id", "Access.Users");
            DropForeignKey("Access.UserShops", "UpdatedBy_Id", "Access.Users");

            DropForeignKey("Scan.UploadXmls", "CreatedBy_Id", "Access.Users");
            Sql(@"IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Scan.Uploads_Access.Users_CreatedBy_Id')
                    ALTER TABLE [Scan].[UploadXmls] DROP CONSTRAINT [FK_Scan.Uploads_Access.Users_CreatedBy_Id];");

            DropForeignKey("Scan.UploadXmls", "UpdatedBy_Id", "Access.Users");
            Sql(@"IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Scan.Uploads_Access.Users_UpdatedBy_Id')
                    ALTER TABLE [Scan].[UploadXmls] DROP CONSTRAINT [FK_Scan.Uploads_Access.Users_UpdatedBy_Id];");

            DropIndex("Repair.Invoices", new[] { "InvoicedById" });

            DropForeignKey("Repair.Invoices", "InvoicedByUserId", "Access.Users");
            DropForeignKey("Access.Shops", "AccountId", "Access.Accounts");
            DropForeignKey("Access.UserAccounts", "AccountId", "Access.Accounts");
            DropForeignKey("Access.UserClaims", "UserId", "Access.Users");
            DropForeignKey("Access.UserLogins", "UserId", "Access.Users");
            DropForeignKey("Access.UserRoles", "UserId", "Access.Users");
            DropForeignKey("Repair.Orders", "CreatedByUserId", "Access.Users");
            DropForeignKey("Repair.Invoices", "CreatedByUserId", "Access.Users");
            DropForeignKey("Repair.Invoices", "UpdatedByUserId", "Access.Users");
            DropForeignKey("Scan.Requests", "CreatedByUserId", "Access.Users");
            DropForeignKey("Scan.Reports", "CompletedByUserId", "Access.Users");
            DropForeignKey("Scan.Reports", "CreatedByUserId", "Access.Users");
            DropForeignKey("Scan.Reports", "InvoicedByUserId", "Access.Users");
            DropForeignKey("Scan.Reports", "ResponsibleTechnicianUserId", "Access.Users");
            DropForeignKey("Scan.Reports", "UpdatedByUserId", "Access.Users");
            DropForeignKey("Scan.ReportsArchive", "CompletedByUserId", "Access.Users");
            DropForeignKey("Scan.ReportsArchive", "CreatedByUserId", "Access.Users");
            DropForeignKey("Scan.ReportsArchive", "InvoicedByUserId", "Access.Users");
            DropForeignKey("Scan.ReportsArchive", "ResponsibleTechnicianUserId", "Access.Users");
            DropForeignKey("Scan.ReportsArchive", "UpdatedByUserId", "Access.Users");
            DropForeignKey("Scan.RequestTypes", "CreatedByUserId", "Access.Users");
            DropForeignKey("Scan.RequestTypes", "UpdatedByUserId", "Access.Users");
            DropForeignKey("Scan.UploadXmls", "CreatedByUserId", "Access.Users");
            DropForeignKey("Scan.UploadXmls", "UpdatedByUserId", "Access.Users");
            DropForeignKey("Scan.Requests", "UpdatedByUserId", "Access.Users");
            DropForeignKey("Repair.Orders", "UpdatedByUserId", "Access.Users");
            DropForeignKey("Access.Accounts", "CreatedByUserId", "Access.Users");
            DropForeignKey("Access.Accounts", "UpdatedByUserId", "Access.Users");
            DropForeignKey("Access.GroupRoles", "CreatedByUserId", "Access.Users");
            DropForeignKey("Access.Groups", "CreatedByUserId", "Access.Users");
            DropForeignKey("Access.Groups", "UpdatedByUserId", "Access.Users");
            DropForeignKey("Access.GroupRoles", "UpdatedByUserId", "Access.Users");
            DropForeignKey("Access.Logins", "UserId", "Access.Users");
            DropForeignKey("Support.NotificationTemplates", "CreatedByUserId", "Access.Users");
            DropForeignKey("Support.NotificationTemplates", "UpdatedByUserId", "Access.Users");
            DropForeignKey("Billing.Payments", "CreatedByUserId", "Access.Users");
            DropForeignKey("Billing.Payments", "PaymentVoidByUserId", "Access.Users");
            DropForeignKey("Billing.Payments", "UpdatedByUserId", "Access.Users");
            DropForeignKey("Billing.PaymentTransactions", "CreatedByUserId", "Access.Users");
            DropForeignKey("Billing.PaymentTransactions", "PaymentTransactionVoidByUserId", "Access.Users");
            DropForeignKey("Billing.PaymentTransactions", "UpdatedByUserId", "Access.Users");
            DropForeignKey("Access.UserAccounts", "CreatedByUserId", "Access.Users");
            DropForeignKey("Access.UserAccounts", "UpdatedByUserId", "Access.Users");
            DropForeignKey("Access.UserAccounts", "UserId", "Access.Users");
            DropForeignKey("Access.UserGroups", "CreatedByUserId", "Access.Users");
            DropForeignKey("Access.UserGroups", "UpdatedByUserId", "Access.Users");
            DropForeignKey("Access.UserGroups", "UserId", "Access.Users");
            DropForeignKey("Access.UserShops", "CreatedByUserId", "Access.Users");
            DropForeignKey("Access.UserShops", "UpdatedByUserId", "Access.Users");
            DropForeignKey("Access.UserShops", "UserId", "Access.Users");
            DropForeignKey("Repair.Orders", "ShopId", "Access.Shops");
            DropForeignKey("Access.Users", "ShopId", "Access.Shops");
            DropForeignKey("Billing.Payments", "PaymentReceivedFromShopId", "Access.Shops");
            DropForeignKey("Access.UserShops", "ShopId", "Access.Shops");
            DropForeignKey("Access.GroupRoles", "GroupId", "Access.Groups");
            DropForeignKey("Access.UserGroups", "GroupId", "Access.Groups");
            DropForeignKey("Access.UserRoles", "RoleId", "Access.Roles");
            DropForeignKey("Access.GroupRoles", "RoleId", "Access.Roles");
            DropIndex("Access.Accounts", new[] { "CreatedByUserId" });
            DropIndex("Access.Accounts", new[] { "UpdatedByUserId" });
            DropIndex("Access.UserClaims", new[] { "UserId" });
            DropIndex("Access.UserLogins", new[] { "UserId" });
            DropIndex("Access.UserRoles", new[] { "UserId" });
            DropIndex("Access.UserRoles", new[] { "RoleId" });
            DropIndex("Access.Shops", new[] { "AccountId" });
            DropIndex("Repair.Orders", new[] { "CreatedByUserId" });
            DropIndex("Repair.Orders", new[] { "UpdatedByUserId" });
            DropIndex("Repair.Invoices", new[] { "InvoicedByUserId" });
            DropIndex("Repair.Invoices", new[] { "CreatedByUserId" });
            DropIndex("Repair.Invoices", new[] { "UpdatedByUserId" });
            DropIndex("Scan.Requests", new[] { "CreatedByUserId" });
            DropIndex("Scan.Requests", new[] { "UpdatedByUserId" });
            DropIndex("Scan.Reports", new[] { "CompletedByUserId" });
            DropIndex("Scan.Reports", new[] { "InvoicedByUserId" });
            DropIndex("Scan.Reports", new[] { "ResponsibleTechnicianUserId" });
            DropIndex("Scan.Reports", new[] { "CreatedByUserId" });
            DropIndex("Scan.Reports", new[] { "UpdatedByUserId" });
            DropIndex("Scan.ReportsArchive", new[] { "CompletedByUserId" });
            DropIndex("Scan.ReportsArchive", new[] { "InvoicedByUserId" });
            DropIndex("Scan.ReportsArchive", new[] { "ResponsibleTechnicianUserId" });
            DropIndex("Scan.ReportsArchive", new[] { "CreatedByUserId" });
            DropIndex("Scan.ReportsArchive", new[] { "UpdatedByUserId" });
            DropIndex("Scan.RequestTypes", new[] { "CreatedByUserId" });
            DropIndex("Scan.RequestTypes", new[] { "UpdatedByUserId" });
            DropIndex("Scan.UploadXmls", new[] { "CreatedByUserId" });
            DropIndex("Scan.UploadXmls", new[] { "UpdatedByUserId" });
            DropIndex("Access.GroupRoles", new[] { "GroupId" });
            DropIndex("Access.GroupRoles", new[] { "RoleId" });
            DropIndex("Access.GroupRoles", new[] { "CreatedByUserId" });
            DropIndex("Access.GroupRoles", new[] { "UpdatedByUserId" });
            DropIndex("Access.Groups", new[] { "CreatedByUserId" });
            DropIndex("Access.Groups", new[] { "UpdatedByUserId" });
            DropIndex("Access.Logins", new[] { "UserId" });
            DropIndex("Support.NotificationTemplates", new[] { "CreatedByUserId" });
            DropIndex("Support.NotificationTemplates", new[] { "UpdatedByUserId" });
            DropIndex("Billing.Payments", new[] { "PaymentVoidByUserId" });
            DropIndex("Billing.Payments", new[] { "CreatedByUserId" });
            DropIndex("Billing.Payments", new[] { "UpdatedByUserId" });
            DropIndex("Billing.PaymentTransactions", new[] { "PaymentTransactionVoidByUserId" });
            DropIndex("Billing.PaymentTransactions", new[] { "CreatedByUserId" });
            DropIndex("Billing.PaymentTransactions", new[] { "UpdatedByUserId" });
            DropIndex("Access.UserAccounts", new[] { "UserId" });
            DropIndex("Access.UserAccounts", new[] { "AccountId" });
            DropIndex("Access.UserAccounts", new[] { "CreatedByUserId" });
            DropIndex("Access.UserAccounts", new[] { "UpdatedByUserId" });
            DropIndex("Access.UserGroups", new[] { "UserId" });
            DropIndex("Access.UserGroups", new[] { "GroupId" });
            DropIndex("Access.UserGroups", new[] { "CreatedByUserId" });
            DropIndex("Access.UserGroups", new[] { "UpdatedByUserId" });
            DropIndex("Access.UserShops", new[] { "UserId" });
            DropIndex("Access.UserShops", new[] { "CreatedByUserId" });
            DropIndex("Access.UserShops", new[] { "UpdatedByUserId" });
            RenameColumn(table: "Access.Users", name: "UserId", newName: "UserGuid");
            RenameColumn(table: "Access.UserLogins", name: "UserId", newName: "UserGuid");
            RenameColumn(table: "Access.UserRoles", name: "UserId", newName: "UserGuid");
            RenameColumn(table: "Access.UserRoles", name: "RoleId", newName: "RoleGuid");
            RenameColumn(table: "Access.Roles", name: "RoleId", newName: "RoleGuid");
            RenameColumn(table: "Access.Accounts", name: "CreatedByUserId", newName: "CreatedByUserGuid");
            RenameColumn(table: "Access.Accounts", name: "UpdatedByUserId", newName: "UpdatedByUserGuid");
            RenameColumn(table: "Access.Shops", name: "AccountId", newName: "AccountGuid");
            RenameColumn(table: "Repair.Orders", name: "CreatedByUserId", newName: "CreatedByUserGuid");
            RenameColumn(table: "Repair.Orders", name: "UpdatedByUserId", newName: "UpdatedByUserGuid");
            RenameColumn(table: "Repair.Invoices", name: "CreatedByUserId", newName: "CreatedByUserGuid");
            RenameColumn(table: "Repair.Invoices", name: "InvoicedByUserId", newName: "InvoicedByUserGuid");
            RenameColumn(table: "Repair.Invoices", name: "UpdatedByUserId", newName: "UpdatedByUserGuid");
            RenameColumn(table: "Scan.Requests", name: "CreatedByUserId", newName: "CreatedByUserGuid");
            RenameColumn(table: "Scan.Requests", name: "UpdatedByUserId", newName: "UpdatedByUserGuid");
            RenameColumn(table: "Scan.Reports", name: "CompletedByUserId", newName: "CompletedByUserGuid");
            RenameColumn(table: "Scan.Reports", name: "CreatedByUserId", newName: "CreatedByUserGuid");
            RenameColumn(table: "Scan.Reports", name: "InvoicedByUserId", newName: "InvoicedByUserGuid");
            RenameColumn(table: "Scan.Reports", name: "ResponsibleTechnicianUserId", newName: "ResponsibleTechnicianUserGuid");
            RenameColumn(table: "Scan.Reports", name: "UpdatedByUserId", newName: "UpdatedByUserGuid");
            RenameColumn(table: "Scan.ReportsArchive", name: "CompletedByUserId", newName: "CompletedByUserGuid");
            RenameColumn(table: "Scan.ReportsArchive", name: "CreatedByUserId", newName: "CreatedByUserGuid");
            RenameColumn(table: "Scan.ReportsArchive", name: "InvoicedByUserId", newName: "InvoicedByUserGuid");
            RenameColumn(table: "Scan.ReportsArchive", name: "ResponsibleTechnicianUserId", newName: "ResponsibleTechnicianUserGuid");
            RenameColumn(table: "Scan.ReportsArchive", name: "UpdatedByUserId", newName: "UpdatedByUserGuid");
            RenameColumn(table: "Scan.RequestTypes", name: "CreatedByUserId", newName: "CreatedByUserGuid");
            RenameColumn(table: "Scan.RequestTypes", name: "UpdatedByUserId", newName: "UpdatedByUserGuid");
            RenameColumn(table: "Scan.UploadXmls", name: "CreatedByUserId", newName: "CreatedByUserGuid");
            RenameColumn(table: "Scan.UploadXmls", name: "UpdatedByUserId", newName: "UpdatedByUserGuid");
            RenameColumn(table: "Access.GroupRoles", name: "CreatedByUserId", newName: "CreatedByUserGuid");
            RenameColumn(table: "Access.GroupRoles", name: "GroupId", newName: "GroupGuid");
            RenameColumn(table: "Access.GroupRoles", name: "RoleId", newName: "RoleGuid");
            RenameColumn(table: "Access.GroupRoles", name: "UpdatedByUserId", newName: "UpdatedByUserGuid");
            RenameColumn(table: "Access.Groups", name: "CreatedByUserId", newName: "CreatedByUserGuid");
            RenameColumn(table: "Access.Groups", name: "UpdatedByUserId", newName: "UpdatedByUserGuid");
            RenameColumn(table: "Access.Logins", name: "UserId", newName: "UserGuid");
            RenameColumn(table: "Support.NotificationTemplates", name: "CreatedByUserId", newName: "CreatedByUserGuid");
            RenameColumn(table: "Support.NotificationTemplates", name: "UpdatedByUserId", newName: "UpdatedByUserGuid");
            RenameColumn(table: "Billing.Payments", name: "CreatedByUserId", newName: "CreatedByUserGuid");
            RenameColumn(table: "Billing.Payments", name: "PaymentVoidByUserId", newName: "PaymentVoidByUserGuid");
            RenameColumn(table: "Billing.Payments", name: "UpdatedByUserId", newName: "UpdatedByUserGuid");
            RenameColumn(table: "Billing.PaymentTransactions", name: "CreatedByUserId", newName: "CreatedByUserGuid");
            RenameColumn(table: "Billing.PaymentTransactions", name: "PaymentTransactionVoidByUserId", newName: "PaymentTransactionVoidByUserGuid");
            RenameColumn(table: "Billing.PaymentTransactions", name: "UpdatedByUserId", newName: "UpdatedByUserGuid");
            RenameColumn(table: "Access.UserAccounts", name: "AccountId", newName: "AccountGuid");
            RenameColumn(table: "Access.UserAccounts", name: "CreatedByUserId", newName: "CreatedByUserGuid");
            RenameColumn(table: "Access.UserAccounts", name: "UpdatedByUserId", newName: "UpdatedByUserGuid");
            RenameColumn(table: "Access.UserAccounts", name: "UserId", newName: "UserGuid");
            RenameColumn(table: "Access.UserGroups", name: "CreatedByUserId", newName: "CreatedByUserGuid");
            RenameColumn(table: "Access.UserGroups", name: "UpdatedByUserId", newName: "UpdatedByUserGuid");
            RenameColumn(table: "Access.UserGroups", name: "UserId", newName: "UserGuid");
            RenameColumn(table: "Access.UserShops", name: "CreatedByUserId", newName: "CreatedByUserGuid");
            RenameColumn(table: "Access.UserShops", name: "UpdatedByUserId", newName: "UpdatedByUserGuid");
            RenameColumn(table: "Access.UserShops", name: "UserId", newName: "UserGuid");
            RenameColumn(table: "Access.UserGroups", name: "GroupId", newName: "GroupGuid");
            DropPrimaryKey("Access.Accounts");
            DropPrimaryKey("Access.Users");
            DropPrimaryKey("Access.UserLogins");
            DropPrimaryKey("Access.UserRoles");
            DropPrimaryKey("Access.Shops");
            DropPrimaryKey("Access.GroupRoles");
            DropPrimaryKey("Access.Groups");
            DropPrimaryKey("Access.Roles");
            DropPrimaryKey("Access.UserAccounts");
            DropPrimaryKey("Access.UserGroups");
            DropPrimaryKey("Access.UserShops");

            // Update Keys.
            Sql(@"UPDATE r
	                SET r.RoleGuid =
		                CASE r.RoleGuid
			                WHEN '1' THEN '4FD55BFD-9E79-48C8-9FB0-DB5281D5005F'
			                WHEN '2' THEN '89CC2BF0-62BB-435B-8BD8-3243BE4EABE9'
			                WHEN '3' THEN '4BDC867F-5801-424F-8617-2D2D6BA7C6EF'
			                WHEN '4' THEN '7A5716F7-0908-45FA-879D-1B5F9362FA71'
			                WHEN '99' THEN '4C1F436B-86C5-4F7B-83DA-6DE88E72EF05'
		                END
                FROM Access.Roles r");

            Sql(@"UPDATE r
	                SET r.RoleGuid =
		                CASE r.RoleGuid
			                WHEN '1' THEN '4FD55BFD-9E79-48C8-9FB0-DB5281D5005F'
			                WHEN '2' THEN '89CC2BF0-62BB-435B-8BD8-3243BE4EABE9'
			                WHEN '3' THEN '4BDC867F-5801-424F-8617-2D2D6BA7C6EF'
			                WHEN '4' THEN '7A5716F7-0908-45FA-879D-1B5F9362FA71'
			                WHEN '99' THEN '4C1F436B-86C5-4F7B-83DA-6DE88E72EF05'
		                END
                FROM Access.UserRoles r");

            RenameColumn("Access.Groups", "GroupId", "GroupGuid");
            RenameColumn("Access.Accounts", "AccountId", "AccountGuid");
            AlterColumn("Access.Groups", "GroupGuid", c => c.Guid(nullable: false, identity: true));
            AlterColumn("Access.Accounts", "AccountGuid", c => c.Guid(nullable: false, identity: true));

            AddColumn("Access.Accounts", "Address1", c => c.String());
            AddColumn("Access.Accounts", "Address2", c => c.String());
            AddColumn("Access.Accounts", "City", c => c.String());
            AddColumn("Access.Accounts", "State", c => c.Int(nullable: false));
            AddColumn("Access.Accounts", "Zip", c => c.String());
            AddColumn("Access.Users", "AllowAllUsers", c => c.Boolean(nullable: false));
            AddColumn("Access.Users", "AllowAllShops", c => c.Boolean(nullable: false));
            AddColumn("Access.Users", "AllowAllAccounts", c => c.Boolean(nullable: false));
            AddColumn("Access.Shops", "NewShopGuid", c => c.Guid(nullable: false, identity: true));
            AlterColumn("Access.Accounts", "CreatedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.Accounts", "UpdatedByUserGuid", c => c.Guid());
            AlterColumn("Access.Users", "UserGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.UserClaims", "UserId", c => c.Guid(nullable: false));
            AlterColumn("Access.UserLogins", "UserGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.UserRoles", "UserGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.UserRoles", "RoleGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.Shops", "ShopId", c => c.Int(nullable: false));
            AlterColumn("Access.Shops", "AccountGuid", c => c.Guid());
            AlterColumn("Repair.Orders", "CreatedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Repair.Orders", "UpdatedByUserGuid", c => c.Guid());
            AlterColumn("Repair.Invoices", "InvoicedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Repair.Invoices", "CreatedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Repair.Invoices", "UpdatedByUserGuid", c => c.Guid());
            AlterColumn("Scan.Requests", "CreatedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Scan.Requests", "UpdatedByUserGuid", c => c.Guid());
            AlterColumn("Scan.Reports", "CompletedByUserGuid", c => c.Guid());
            AlterColumn("Scan.Reports", "InvoicedByUserGuid", c => c.Guid());
            AlterColumn("Scan.Reports", "ResponsibleTechnicianUserGuid", c => c.Guid());
            AlterColumn("Scan.Reports", "CreatedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Scan.Reports", "UpdatedByUserGuid", c => c.Guid());
            AlterColumn("Scan.ReportsArchive", "CompletedByUserGuid", c => c.Guid());
            AlterColumn("Scan.ReportsArchive", "InvoicedByUserGuid", c => c.Guid());
            AlterColumn("Scan.ReportsArchive", "ResponsibleTechnicianUserGuid", c => c.Guid());
            AlterColumn("Scan.ReportsArchive", "CreatedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Scan.ReportsArchive", "UpdatedByUserGuid", c => c.Guid());
            AlterColumn("Scan.RequestTypes", "CreatedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Scan.RequestTypes", "UpdatedByUserGuid", c => c.Guid());
            AlterColumn("Scan.UploadXmls", "CreatedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Scan.UploadXmls", "UpdatedByUserGuid", c => c.Guid());
            AlterColumn("Access.GroupRoles", "GroupGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.GroupRoles", "RoleGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.GroupRoles", "CreatedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.GroupRoles", "UpdatedByUserGuid", c => c.Guid());
            AlterColumn("Access.Groups", "CreatedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.Groups", "UpdatedByUserGuid", c => c.Guid());
            AlterColumn("Access.Roles", "RoleGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.Logins", "UserGuid", c => c.Guid());
            AlterColumn("Support.NotificationTemplates", "CreatedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Support.NotificationTemplates", "UpdatedByUserGuid", c => c.Guid());
            AlterColumn("Billing.Payments", "PaymentVoidByUserGuid", c => c.Guid());
            AlterColumn("Billing.Payments", "CreatedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Billing.Payments", "UpdatedByUserGuid", c => c.Guid());
            AlterColumn("Billing.PaymentTransactions", "PaymentTransactionVoidByUserGuid", c => c.Guid());
            AlterColumn("Billing.PaymentTransactions", "CreatedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Billing.PaymentTransactions", "UpdatedByUserGuid", c => c.Guid());
            AlterColumn("Access.UserAccounts", "UserGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.UserAccounts", "AccountGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.UserAccounts", "CreatedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.UserAccounts", "UpdatedByUserGuid", c => c.Guid());
            AlterColumn("Access.UserGroups", "UserGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.UserGroups", "GroupGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.UserGroups", "CreatedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.UserGroups", "UpdatedByUserGuid", c => c.Guid());
            AlterColumn("Access.UserShops", "UserGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.UserShops", "CreatedByUserGuid", c => c.Guid(nullable: false));
            AlterColumn("Access.UserShops", "UpdatedByUserGuid", c => c.Guid());
            AddPrimaryKey("Access.Accounts", "AccountGuid");
            AddPrimaryKey("Access.Users", "UserGuid");
            AddPrimaryKey("Access.UserLogins", new[] { "LoginProvider", "ProviderKey", "UserGuid" });
            AddPrimaryKey("Access.UserRoles", new[] { "UserGuid", "RoleGuid" });
            AddPrimaryKey("Access.Shops", "ShopId");
            AddPrimaryKey("Access.GroupRoles", new[] { "GroupGuid", "RoleGuid" });
            AddPrimaryKey("Access.Groups", "GroupGuid");
            AddPrimaryKey("Access.Roles", "RoleGuid");
            AddPrimaryKey("Access.UserAccounts", new[] { "UserGuid", "AccountGuid" });
            AddPrimaryKey("Access.UserGroups", new[] { "UserGuid", "GroupGuid" });
            AddPrimaryKey("Access.UserShops", new[] { "UserGuid", "ShopId" });
            CreateIndex("Access.Accounts", "CreatedByUserGuid");
            CreateIndex("Access.Accounts", "UpdatedByUserGuid");
            CreateIndex("Access.UserAccounts", "UserGuid");
            CreateIndex("Access.UserAccounts", "AccountGuid");
            CreateIndex("Access.UserAccounts", "CreatedByUserGuid");
            CreateIndex("Access.UserAccounts", "UpdatedByUserGuid");
            CreateIndex("Access.UserClaims", "UserId");
            CreateIndex("Access.UserLogins", "UserGuid");
            CreateIndex("Access.UserRoles", "UserGuid");
            CreateIndex("Access.UserRoles", "RoleGuid");
            CreateIndex("Access.Shops", "AccountGuid");
            CreateIndex("Access.UserShops", "UserGuid");
            CreateIndex("Access.UserShops", "CreatedByUserGuid");
            CreateIndex("Access.UserShops", "UpdatedByUserGuid");
            CreateIndex("Access.GroupRoles", "GroupGuid");
            CreateIndex("Access.GroupRoles", "RoleGuid");
            CreateIndex("Access.GroupRoles", "CreatedByUserGuid");
            CreateIndex("Access.GroupRoles", "UpdatedByUserGuid");
            CreateIndex("Access.Groups", "CreatedByUserGuid");
            CreateIndex("Access.Groups", "UpdatedByUserGuid");
            CreateIndex("Access.Logins", "UserGuid");
            CreateIndex("Support.NotificationTemplates", "CreatedByUserGuid");
            CreateIndex("Support.NotificationTemplates", "UpdatedByUserGuid");
            CreateIndex("Billing.Payments", "PaymentVoidByUserGuid");
            CreateIndex("Billing.Payments", "CreatedByUserGuid");
            CreateIndex("Billing.Payments", "UpdatedByUserGuid");
            CreateIndex("Billing.PaymentTransactions", "PaymentTransactionVoidByUserGuid");
            CreateIndex("Billing.PaymentTransactions", "CreatedByUserGuid");
            CreateIndex("Billing.PaymentTransactions", "UpdatedByUserGuid");
            CreateIndex("Repair.Invoices", "InvoicedByUserGuid");
            CreateIndex("Repair.Invoices", "CreatedByUserGuid");
            CreateIndex("Repair.Invoices", "UpdatedByUserGuid");
            CreateIndex("Repair.Orders", "CreatedByUserGuid");
            CreateIndex("Repair.Orders", "UpdatedByUserGuid");
            CreateIndex("Scan.Requests", "CreatedByUserGuid");
            CreateIndex("Scan.Requests", "UpdatedByUserGuid");
            CreateIndex("Scan.Reports", "CompletedByUserGuid");
            CreateIndex("Scan.Reports", "InvoicedByUserGuid");
            CreateIndex("Scan.Reports", "ResponsibleTechnicianUserGuid");
            CreateIndex("Scan.Reports", "CreatedByUserGuid");
            CreateIndex("Scan.Reports", "UpdatedByUserGuid");
            CreateIndex("Scan.ReportsArchive", "CompletedByUserGuid");
            CreateIndex("Scan.ReportsArchive", "InvoicedByUserGuid");
            CreateIndex("Scan.ReportsArchive", "ResponsibleTechnicianUserGuid");
            CreateIndex("Scan.ReportsArchive", "CreatedByUserGuid");
            CreateIndex("Scan.ReportsArchive", "UpdatedByUserGuid");
            CreateIndex("Scan.RequestTypes", "CreatedByUserGuid");
            CreateIndex("Scan.RequestTypes", "UpdatedByUserGuid");
            CreateIndex("Scan.UploadXmls", "CreatedByUserGuid");
            CreateIndex("Scan.UploadXmls", "UpdatedByUserGuid");
            CreateIndex("Access.UserGroups", "UserGuid");
            CreateIndex("Access.UserGroups", "GroupGuid");
            CreateIndex("Access.UserGroups", "CreatedByUserGuid");
            CreateIndex("Access.UserGroups", "UpdatedByUserGuid");
            AddForeignKey("Access.UserAccounts", "UserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.UserShops", "UserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Repair.Invoices", "InvoicedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.UserAccounts", "AccountGuid", "Access.Accounts", "AccountGuid");
            AddForeignKey("Access.Shops", "AccountGuid", "Access.Accounts", "AccountGuid");
            AddForeignKey("Access.UserClaims", "UserId", "Access.Users", "UserGuid");
            AddForeignKey("Access.UserLogins", "UserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.UserRoles", "UserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.UserShops", "CreatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.UserShops", "UpdatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.UserAccounts", "CreatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.UserAccounts", "UpdatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.Accounts", "CreatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.Accounts", "UpdatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.GroupRoles", "CreatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.Groups", "CreatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.Groups", "UpdatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.GroupRoles", "UpdatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.Logins", "UserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Support.NotificationTemplates", "CreatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Support.NotificationTemplates", "UpdatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Billing.Payments", "CreatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Billing.Payments", "PaymentVoidByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Billing.Payments", "UpdatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Billing.PaymentTransactions", "CreatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Repair.Invoices", "CreatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Repair.Orders", "CreatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Scan.Requests", "CreatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Scan.Reports", "CompletedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Scan.Reports", "CreatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Scan.Reports", "InvoicedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Scan.Reports", "ResponsibleTechnicianUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Scan.Reports", "UpdatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Scan.ReportsArchive", "CompletedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Scan.ReportsArchive", "CreatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Scan.ReportsArchive", "InvoicedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Scan.ReportsArchive", "ResponsibleTechnicianUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Scan.ReportsArchive", "UpdatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Scan.RequestTypes", "CreatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Scan.RequestTypes", "UpdatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Scan.UploadXmls", "CreatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Scan.UploadXmls", "UpdatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Scan.Requests", "UpdatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Repair.Orders", "UpdatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Repair.Invoices", "UpdatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Billing.PaymentTransactions", "PaymentTransactionVoidByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Billing.PaymentTransactions", "UpdatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.UserGroups", "CreatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.UserGroups", "UpdatedByUserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.UserGroups", "UserGuid", "Access.Users", "UserGuid");
            AddForeignKey("Access.UserShops", "ShopId", "Access.Shops", "ShopId");
            AddForeignKey("Access.Users", "ShopId", "Access.Shops", "ShopId");
            AddForeignKey("Billing.Payments", "PaymentReceivedFromShopId", "Access.Shops", "ShopId");
            AddForeignKey("Repair.Orders", "ShopId", "Access.Shops", "ShopId");
            AddForeignKey("Access.GroupRoles", "GroupGuid", "Access.Groups", "GroupGuid");
            AddForeignKey("Access.UserGroups", "GroupGuid", "Access.Groups", "GroupGuid");
            AddForeignKey("Access.UserRoles", "RoleGuid", "Access.Roles", "RoleGuid");
            AddForeignKey("Access.GroupRoles", "RoleGuid", "Access.Roles", "RoleGuid");

            SqlFile($"{ Assembly.GetExecutingAssembly().GetExecutingAssemblyPath() }/Migrations/201612302046303_v2.9.2_Deploy.sql");

        }

        public override void Down()
        {
            DropForeignKey("Access.GroupRoles", "RoleGuid", "Access.Roles");
            DropForeignKey("Access.UserRoles", "RoleGuid", "Access.Roles");
            DropForeignKey("Access.UserGroups", "GroupGuid", "Access.Groups");
            DropForeignKey("Access.GroupRoles", "GroupGuid", "Access.Groups");
            DropForeignKey("Repair.Orders", "ShopId", "Access.Shops");
            DropForeignKey("Billing.Payments", "PaymentReceivedFromShopId", "Access.Shops");
            DropForeignKey("Access.Users", "ShopId", "Access.Shops");
            DropForeignKey("Access.UserShops", "ShopId", "Access.Shops");
            DropForeignKey("Access.UserGroups", "UserGuid", "Access.Users");
            DropForeignKey("Access.UserGroups", "UpdatedByUserGuid", "Access.Users");
            DropForeignKey("Access.UserGroups", "CreatedByUserGuid", "Access.Users");
            DropForeignKey("Billing.PaymentTransactions", "UpdatedByUserGuid", "Access.Users");
            DropForeignKey("Billing.PaymentTransactions", "PaymentTransactionVoidByUserGuid", "Access.Users");
            DropForeignKey("Repair.Invoices", "UpdatedByUserGuid", "Access.Users");
            DropForeignKey("Repair.Orders", "UpdatedByUserGuid", "Access.Users");
            DropForeignKey("Scan.Requests", "UpdatedByUserGuid", "Access.Users");
            DropForeignKey("Scan.UploadXmls", "UpdatedByUserGuid", "Access.Users");
            DropForeignKey("Scan.UploadXmls", "CreatedByUserGuid", "Access.Users");
            DropForeignKey("Scan.RequestTypes", "UpdatedByUserGuid", "Access.Users");
            DropForeignKey("Scan.RequestTypes", "CreatedByUserGuid", "Access.Users");
            DropForeignKey("Scan.Reports", "UpdatedByUserGuid", "Access.Users");
            DropForeignKey("Scan.Reports", "ResponsibleTechnicianUserGuid", "Access.Users");
            DropForeignKey("Scan.Reports", "InvoicedByUserGuid", "Access.Users");
            DropForeignKey("Scan.Reports", "CreatedByUserGuid", "Access.Users");
            DropForeignKey("Scan.Reports", "CompletedByUserGuid", "Access.Users");
            DropForeignKey("Scan.ReportsArchive", "UpdatedByUserGuid", "Access.Users");
            DropForeignKey("Scan.ReportsArchive", "ResponsibleTechnicianUserGuid", "Access.Users");
            DropForeignKey("Scan.ReportsArchive", "InvoicedByUserGuid", "Access.Users");
            DropForeignKey("Scan.ReportsArchive", "CreatedByUserGuid", "Access.Users");
            DropForeignKey("Scan.ReportsArchive", "CompletedByUserGuid", "Access.Users");
            DropForeignKey("Scan.Requests", "CreatedByUserGuid", "Access.Users");
            DropForeignKey("Repair.Orders", "CreatedByUserGuid", "Access.Users");
            DropForeignKey("Repair.Invoices", "CreatedByUserGuid", "Access.Users");
            DropForeignKey("Billing.PaymentTransactions", "CreatedByUserGuid", "Access.Users");
            DropForeignKey("Billing.Payments", "UpdatedByUserGuid", "Access.Users");
            DropForeignKey("Billing.Payments", "PaymentVoidByUserGuid", "Access.Users");
            DropForeignKey("Billing.Payments", "CreatedByUserGuid", "Access.Users");
            DropForeignKey("Support.NotificationTemplates", "UpdatedByUserGuid", "Access.Users");
            DropForeignKey("Support.NotificationTemplates", "CreatedByUserGuid", "Access.Users");
            DropForeignKey("Access.Logins", "UserGuid", "Access.Users");
            DropForeignKey("Access.GroupRoles", "UpdatedByUserGuid", "Access.Users");
            DropForeignKey("Access.Groups", "UpdatedByUserGuid", "Access.Users");
            DropForeignKey("Access.Groups", "CreatedByUserGuid", "Access.Users");
            DropForeignKey("Access.GroupRoles", "CreatedByUserGuid", "Access.Users");
            DropForeignKey("Access.Accounts", "UpdatedByUserGuid", "Access.Users");
            DropForeignKey("Access.Accounts", "CreatedByUserGuid", "Access.Users");
            DropForeignKey("Access.UserAccounts", "UpdatedByUserGuid", "Access.Users");
            DropForeignKey("Access.UserAccounts", "CreatedByUserGuid", "Access.Users");
            DropForeignKey("Access.UserShops", "UpdatedByUserGuid", "Access.Users");
            DropForeignKey("Access.UserShops", "CreatedByUserGuid", "Access.Users");
            DropForeignKey("Access.UserRoles", "UserGuid", "Access.Users");
            DropForeignKey("Access.UserLogins", "UserGuid", "Access.Users");
            DropForeignKey("Access.UserClaims", "UserId", "Access.Users");
            DropForeignKey("Access.Shops", "AccountGuid", "Access.Accounts");
            DropForeignKey("Access.UserAccounts", "AccountGuid", "Access.Accounts");
            DropForeignKey("Repair.Invoices", "InvoicedByUserGuid", "Access.Users");
            DropForeignKey("Access.UserShops", "UserGuid", "Access.Users");
            DropForeignKey("Access.UserAccounts", "UserGuid", "Access.Users");
            DropIndex("Access.UserGroups", new[] { "UpdatedByUserGuid" });
            DropIndex("Access.UserGroups", new[] { "CreatedByUserGuid" });
            DropIndex("Access.UserGroups", new[] { "GroupGuid" });
            DropIndex("Access.UserGroups", new[] { "UserGuid" });
            DropIndex("Scan.UploadXmls", new[] { "UpdatedByUserGuid" });
            DropIndex("Scan.UploadXmls", new[] { "CreatedByUserGuid" });
            DropIndex("Scan.RequestTypes", new[] { "UpdatedByUserGuid" });
            DropIndex("Scan.RequestTypes", new[] { "CreatedByUserGuid" });
            DropIndex("Scan.Reports", new[] { "UpdatedByUserGuid" });
            DropIndex("Scan.Reports", new[] { "CreatedByUserGuid" });
            DropIndex("Scan.Reports", new[] { "ResponsibleTechnicianUserGuid" });
            DropIndex("Scan.Reports", new[] { "InvoicedByUserGuid" });
            DropIndex("Scan.Reports", new[] { "CompletedByUserGuid" });
            DropIndex("Scan.ReportsArchive", new[] { "UpdatedByUserGuid" });
            DropIndex("Scan.ReportsArchive", new[] { "CreatedByUserGuid" });
            DropIndex("Scan.ReportsArchive", new[] { "ResponsibleTechnicianUserGuid" });
            DropIndex("Scan.ReportsArchive", new[] { "InvoicedByUserGuid" });
            DropIndex("Scan.ReportsArchive", new[] { "CompletedByUserGuid" });
            DropIndex("Scan.Requests", new[] { "UpdatedByUserGuid" });
            DropIndex("Scan.Requests", new[] { "CreatedByUserGuid" });
            DropIndex("Repair.Orders", new[] { "UpdatedByUserGuid" });
            DropIndex("Repair.Orders", new[] { "CreatedByUserGuid" });
            DropIndex("Repair.Invoices", new[] { "UpdatedByUserGuid" });
            DropIndex("Repair.Invoices", new[] { "CreatedByUserGuid" });
            DropIndex("Repair.Invoices", new[] { "InvoicedByUserGuid" });
            DropIndex("Billing.PaymentTransactions", new[] { "UpdatedByUserGuid" });
            DropIndex("Billing.PaymentTransactions", new[] { "CreatedByUserGuid" });
            DropIndex("Billing.PaymentTransactions", new[] { "PaymentTransactionVoidByUserGuid" });
            DropIndex("Billing.Payments", new[] { "UpdatedByUserGuid" });
            DropIndex("Billing.Payments", new[] { "CreatedByUserGuid" });
            DropIndex("Billing.Payments", new[] { "PaymentVoidByUserGuid" });
            DropIndex("Support.NotificationTemplates", new[] { "UpdatedByUserGuid" });
            DropIndex("Support.NotificationTemplates", new[] { "CreatedByUserGuid" });
            DropIndex("Access.Logins", new[] { "UserGuid" });
            DropIndex("Access.Groups", new[] { "UpdatedByUserGuid" });
            DropIndex("Access.Groups", new[] { "CreatedByUserGuid" });
            DropIndex("Access.GroupRoles", new[] { "UpdatedByUserGuid" });
            DropIndex("Access.GroupRoles", new[] { "CreatedByUserGuid" });
            DropIndex("Access.GroupRoles", new[] { "RoleGuid" });
            DropIndex("Access.GroupRoles", new[] { "GroupGuid" });
            DropIndex("Access.UserShops", new[] { "UpdatedByUserGuid" });
            DropIndex("Access.UserShops", new[] { "CreatedByUserGuid" });
            DropIndex("Access.UserShops", new[] { "UserGuid" });
            DropIndex("Access.Shops", new[] { "AccountGuid" });
            DropIndex("Access.UserRoles", new[] { "RoleGuid" });
            DropIndex("Access.UserRoles", new[] { "UserGuid" });
            DropIndex("Access.UserLogins", new[] { "UserGuid" });
            DropIndex("Access.UserClaims", new[] { "UserId" });
            DropIndex("Access.UserAccounts", new[] { "UpdatedByUserGuid" });
            DropIndex("Access.UserAccounts", new[] { "CreatedByUserGuid" });
            DropIndex("Access.UserAccounts", new[] { "AccountGuid" });
            DropIndex("Access.UserAccounts", new[] { "UserGuid" });
            DropIndex("Access.Accounts", new[] { "UpdatedByUserGuid" });
            DropIndex("Access.Accounts", new[] { "CreatedByUserGuid" });
            DropPrimaryKey("Access.UserShops");
            DropPrimaryKey("Access.UserGroups");
            DropPrimaryKey("Access.UserAccounts");
            DropPrimaryKey("Access.Roles");
            DropPrimaryKey("Access.Groups");
            DropPrimaryKey("Access.GroupRoles");
            DropPrimaryKey("Access.Shops");
            DropPrimaryKey("Access.UserRoles");
            DropPrimaryKey("Access.UserLogins");
            DropPrimaryKey("Access.Users");
            DropPrimaryKey("Access.Accounts");

            RenameColumn("Access.Groups", "GroupGuid", "GroupId");
            RenameColumn("Access.Accounts", "AccountGuid", "AccountId");
            AlterColumn("Access.Groups", "GroupId", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.Accounts", "AccountId", c => c.String(nullable: false, maxLength: 128));

            AlterColumn("Access.UserShops", "UpdatedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Access.UserShops", "CreatedByUserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.UserShops", "UserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.UserGroups", "UpdatedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Access.UserGroups", "CreatedByUserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.UserGroups", "GroupGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.UserGroups", "UserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.UserAccounts", "UpdatedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Access.UserAccounts", "CreatedByUserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.UserAccounts", "AccountGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.UserAccounts", "UserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Billing.PaymentTransactions", "UpdatedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Billing.PaymentTransactions", "CreatedByUserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Billing.PaymentTransactions", "PaymentTransactionVoidByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Billing.Payments", "UpdatedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Billing.Payments", "CreatedByUserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Billing.Payments", "PaymentVoidByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Support.NotificationTemplates", "UpdatedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Support.NotificationTemplates", "CreatedByUserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.Logins", "UserGuid", c => c.String(maxLength: 128));
            AlterColumn("Access.Roles", "RoleGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.Groups", "UpdatedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Access.Groups", "CreatedByUserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.GroupRoles", "UpdatedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Access.GroupRoles", "CreatedByUserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.GroupRoles", "RoleGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.GroupRoles", "GroupGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Scan.UploadXmls", "UpdatedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Scan.UploadXmls", "CreatedByUserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Scan.RequestTypes", "UpdatedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Scan.RequestTypes", "CreatedByUserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Scan.Reports", "UpdatedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Scan.Reports", "CreatedByUserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Scan.Reports", "ResponsibleTechnicianUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Scan.Reports", "InvoicedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Scan.Reports", "CompletedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Scan.ReportsArchive", "UpdatedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Scan.ReportsArchive", "CreatedByUserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Scan.ReportsArchive", "ResponsibleTechnicianUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Scan.ReportsArchive", "InvoicedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Scan.ReportsArchive", "CompletedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Scan.Requests", "UpdatedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Scan.Requests", "CreatedByUserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Repair.Invoices", "UpdatedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Repair.Invoices", "CreatedByUserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Repair.Invoices", "InvoicedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Repair.Orders", "UpdatedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Repair.Orders", "CreatedByUserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.Shops", "AccountGuid", c => c.String(maxLength: 128));
            AlterColumn("Access.Shops", "ShopId", c => c.Int(nullable: false, identity: true));
            AlterColumn("Access.UserRoles", "RoleGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.UserRoles", "UserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.UserLogins", "UserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.UserClaims", "UserId", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.Users", "UserGuid", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("Access.Accounts", "UpdatedByUserGuid", c => c.String(maxLength: 128));
            AlterColumn("Access.Accounts", "CreatedByUserGuid", c => c.String(nullable: false, maxLength: 128));
            DropColumn("Access.Shops", "NewShopGuid");
            DropColumn("Access.Users", "AllowAllAccounts");
            DropColumn("Access.Users", "AllowAllShops");
            DropColumn("Access.Users", "AllowAllUsers");
            DropColumn("Access.Accounts", "Zip");
            DropColumn("Access.Accounts", "State");
            DropColumn("Access.Accounts", "City");
            DropColumn("Access.Accounts", "Address2");
            DropColumn("Access.Accounts", "Address1");
            RenameColumn(table: "Access.UserGroups", name: "GroupGuid", newName: "GroupId");
            RenameColumn(table: "Access.UserShops", name: "UserGuid", newName: "UserId");
            RenameColumn(table: "Access.UserShops", name: "UpdatedByUserGuid", newName: "UpdatedByUserId");
            RenameColumn(table: "Access.UserShops", name: "CreatedByUserGuid", newName: "CreatedByUserId");
            RenameColumn(table: "Access.UserGroups", name: "UserGuid", newName: "UserId");
            RenameColumn(table: "Access.UserGroups", name: "UpdatedByUserGuid", newName: "UpdatedByUserId");
            RenameColumn(table: "Access.UserGroups", name: "CreatedByUserGuid", newName: "CreatedByUserId");
            RenameColumn(table: "Access.UserAccounts", name: "UserGuid", newName: "UserId");
            RenameColumn(table: "Access.UserAccounts", name: "UpdatedByUserGuid", newName: "UpdatedByUserId");
            RenameColumn(table: "Access.UserAccounts", name: "CreatedByUserGuid", newName: "CreatedByUserId");
            RenameColumn(table: "Access.UserAccounts", name: "AccountGuid", newName: "AccountId");
            RenameColumn(table: "Billing.PaymentTransactions", name: "UpdatedByUserGuid", newName: "UpdatedByUserId");
            RenameColumn(table: "Billing.PaymentTransactions", name: "PaymentTransactionVoidByUserGuid", newName: "PaymentTransactionVoidByUserId");
            RenameColumn(table: "Billing.PaymentTransactions", name: "CreatedByUserGuid", newName: "CreatedByUserId");
            RenameColumn(table: "Billing.Payments", name: "UpdatedByUserGuid", newName: "UpdatedByUserId");
            RenameColumn(table: "Billing.Payments", name: "PaymentVoidByUserGuid", newName: "PaymentVoidByUserId");
            RenameColumn(table: "Billing.Payments", name: "CreatedByUserGuid", newName: "CreatedByUserId");
            RenameColumn(table: "Support.NotificationTemplates", name: "UpdatedByUserGuid", newName: "UpdatedByUserId");
            RenameColumn(table: "Support.NotificationTemplates", name: "CreatedByUserGuid", newName: "CreatedByUserId");
            RenameColumn(table: "Access.Logins", name: "UserGuid", newName: "UserId");
            RenameColumn(table: "Access.Groups", name: "UpdatedByUserGuid", newName: "UpdatedByUserId");
            RenameColumn(table: "Access.Groups", name: "CreatedByUserGuid", newName: "CreatedByUserId");
            RenameColumn(table: "Access.GroupRoles", name: "UpdatedByUserGuid", newName: "UpdatedByUserId");
            RenameColumn(table: "Access.GroupRoles", name: "RoleGuid", newName: "RoleId");
            RenameColumn(table: "Access.GroupRoles", name: "GroupGuid", newName: "GroupId");
            RenameColumn(table: "Access.GroupRoles", name: "CreatedByUserGuid", newName: "CreatedByUserId");
            RenameColumn(table: "Scan.UploadXmls", name: "UpdatedByUserGuid", newName: "UpdatedByUserId");
            RenameColumn(table: "Scan.UploadXmls", name: "CreatedByUserGuid", newName: "CreatedByUserId");
            RenameColumn(table: "Scan.RequestTypes", name: "UpdatedByUserGuid", newName: "UpdatedByUserId");
            RenameColumn(table: "Scan.RequestTypes", name: "CreatedByUserGuid", newName: "CreatedByUserId");
            RenameColumn(table: "Scan.Reports", name: "UpdatedByUserGuid", newName: "UpdatedByUserId");
            RenameColumn(table: "Scan.Reports", name: "ResponsibleTechnicianUserGuid", newName: "ResponsibleTechnicianUserId");
            RenameColumn(table: "Scan.Reports", name: "InvoicedByUserGuid", newName: "InvoicedByUserId");
            RenameColumn(table: "Scan.Reports", name: "CreatedByUserGuid", newName: "CreatedByUserId");
            RenameColumn(table: "Scan.Reports", name: "CompletedByUserGuid", newName: "CompletedByUserId");
            RenameColumn(table: "Scan.ReportsArchive", name: "UpdatedByUserGuid", newName: "UpdatedByUserId");
            RenameColumn(table: "Scan.ReportsArchive", name: "ResponsibleTechnicianUserGuid", newName: "ResponsibleTechnicianUserId");
            RenameColumn(table: "Scan.ReportsArchive", name: "InvoicedByUserGuid", newName: "InvoicedByUserId");
            RenameColumn(table: "Scan.ReportsArchive", name: "CreatedByUserGuid", newName: "CreatedByUserId");
            RenameColumn(table: "Scan.ReportsArchive", name: "CompletedByUserGuid", newName: "CompletedByUserId");
            RenameColumn(table: "Scan.Requests", name: "UpdatedByUserGuid", newName: "UpdatedByUserId");
            RenameColumn(table: "Scan.Requests", name: "CreatedByUserGuid", newName: "CreatedByUserId");
            RenameColumn(table: "Repair.Invoices", name: "UpdatedByUserGuid", newName: "UpdatedByUserId");
            RenameColumn(table: "Repair.Invoices", name: "InvoicedByUserGuid", newName: "InvoicedByUserId");
            RenameColumn(table: "Repair.Invoices", name: "CreatedByUserGuid", newName: "CreatedByUserId");
            RenameColumn(table: "Repair.Orders", name: "UpdatedByUserGuid", newName: "UpdatedByUserId");
            RenameColumn(table: "Repair.Orders", name: "CreatedByUserGuid", newName: "CreatedByUserId");
            RenameColumn(table: "Access.Shops", name: "AccountGuid", newName: "AccountId");
            RenameColumn(table: "Access.Accounts", name: "UpdatedByUserGuid", newName: "UpdatedByUserId");
            RenameColumn(table: "Access.Accounts", name: "CreatedByUserGuid", newName: "CreatedByUserId");
            RenameColumn(table: "Access.Roles", name: "RoleGuid", newName: "RoleId");
            RenameColumn(table: "Access.UserRoles", name: "RoleGuid", newName: "RoleId");
            RenameColumn(table: "Access.UserRoles", name: "UserGuid", newName: "UserId");
            RenameColumn(table: "Access.UserLogins", name: "UserGuid", newName: "UserId");
            RenameColumn(table: "Access.Users", name: "UserGuid", newName: "UserId");

            Sql(@"UPDATE r
	                SET r.RoleId =
		                CASE r.RoleId
			                WHEN '4FD55BFD-9E79-48C8-9FB0-DB5281D5005F' THEN '1'
			                WHEN '89CC2BF0-62BB-435B-8BD8-3243BE4EABE9' THEN '2'
			                WHEN '4BDC867F-5801-424F-8617-2D2D6BA7C6EF' THEN '3'
			                WHEN '7A5716F7-0908-45FA-879D-1B5F9362FA71' THEN '4'
			                WHEN '4C1F436B-86C5-4F7B-83DA-6DE88E72EF05' THEN '99'
		                END
                FROM Access.Roles r");

            Sql(@"UPDATE r
	                SET r.RoleId =
		                CASE r.RoleId
			                WHEN '4FD55BFD-9E79-48C8-9FB0-DB5281D5005F' THEN '1'
			                WHEN '89CC2BF0-62BB-435B-8BD8-3243BE4EABE9' THEN '2'
			                WHEN '4BDC867F-5801-424F-8617-2D2D6BA7C6EF' THEN '3'
			                WHEN '7A5716F7-0908-45FA-879D-1B5F9362FA71' THEN '4'
			                WHEN '4C1F436B-86C5-4F7B-83DA-6DE88E72EF05' THEN '99'
		                END
                FROM Access.UserRoles r");

            AddPrimaryKey("Access.UserShops", new[] { "UserId", "ShopId" });
            AddPrimaryKey("Access.UserGroups", new[] { "UserId", "GroupId" });
            AddPrimaryKey("Access.UserAccounts", new[] { "UserId", "AccountId" });
            AddPrimaryKey("Access.Roles", "RoleId");
            AddPrimaryKey("Access.Groups", "GroupId");
            AddPrimaryKey("Access.GroupRoles", new[] { "GroupId", "RoleId" });
            AddPrimaryKey("Access.Shops", "ShopId");
            AddPrimaryKey("Access.UserRoles", new[] { "UserId", "RoleId" });
            AddPrimaryKey("Access.UserLogins", new[] { "LoginProvider", "ProviderKey", "UserId" });
            AddPrimaryKey("Access.Users", "UserId");
            AddPrimaryKey("Access.Accounts", "AccountId");

            CreateIndex("Access.UserShops", "UpdatedByUserId");
            CreateIndex("Access.UserShops", "CreatedByUserId");
            CreateIndex("Access.UserShops", "UserId");
            CreateIndex("Access.UserGroups", "UpdatedByUserId");
            CreateIndex("Access.UserGroups", "CreatedByUserId");
            CreateIndex("Access.UserGroups", "GroupId");
            CreateIndex("Access.UserGroups", "UserId");
            CreateIndex("Access.UserAccounts", "UpdatedByUserId");
            CreateIndex("Access.UserAccounts", "CreatedByUserId");
            CreateIndex("Access.UserAccounts", "AccountId");
            CreateIndex("Access.UserAccounts", "UserId");
            CreateIndex("Billing.PaymentTransactions", "UpdatedByUserId");
            CreateIndex("Billing.PaymentTransactions", "CreatedByUserId");
            CreateIndex("Billing.PaymentTransactions", "PaymentTransactionVoidByUserId");
            CreateIndex("Billing.Payments", "UpdatedByUserId");
            CreateIndex("Billing.Payments", "CreatedByUserId");
            CreateIndex("Billing.Payments", "PaymentVoidByUserId");
            CreateIndex("Support.NotificationTemplates", "UpdatedByUserId");
            CreateIndex("Support.NotificationTemplates", "CreatedByUserId");
            CreateIndex("Access.Logins", "UserId");
            CreateIndex("Access.Groups", "UpdatedByUserId");
            CreateIndex("Access.Groups", "CreatedByUserId");
            CreateIndex("Access.GroupRoles", "UpdatedByUserId");
            CreateIndex("Access.GroupRoles", "CreatedByUserId");
            CreateIndex("Access.GroupRoles", "RoleId");
            CreateIndex("Access.GroupRoles", "GroupId");
            CreateIndex("Scan.UploadXmls", "UpdatedByUserId");
            CreateIndex("Scan.UploadXmls", "CreatedByUserId");
            CreateIndex("Scan.RequestTypes", "UpdatedByUserId");
            CreateIndex("Scan.RequestTypes", "CreatedByUserId");
            CreateIndex("Scan.Reports", "UpdatedByUserId");
            CreateIndex("Scan.Reports", "CreatedByUserId");
            CreateIndex("Scan.Reports", "ResponsibleTechnicianUserId");
            CreateIndex("Scan.Reports", "InvoicedByUserId");
            CreateIndex("Scan.Reports", "CompletedByUserId");
            CreateIndex("Scan.ReportsArchive", "UpdatedByUserId");
            CreateIndex("Scan.ReportsArchive", "CreatedByUserId");
            CreateIndex("Scan.ReportsArchive", "ResponsibleTechnicianUserId");
            CreateIndex("Scan.ReportsArchive", "InvoicedByUserId");
            CreateIndex("Scan.ReportsArchive", "CompletedByUserId");
            CreateIndex("Scan.Requests", "UpdatedByUserId");
            CreateIndex("Scan.Requests", "CreatedByUserId");
            CreateIndex("Repair.Invoices", "UpdatedByUserId");
            CreateIndex("Repair.Invoices", "CreatedByUserId");
            CreateIndex("Repair.Invoices", "InvoicedByUserId");
            CreateIndex("Repair.Orders", "UpdatedByUserId");
            CreateIndex("Repair.Orders", "CreatedByUserId");
            CreateIndex("Access.Shops", "AccountId");
            CreateIndex("Access.UserRoles", "RoleId");
            CreateIndex("Access.UserRoles", "UserId");
            CreateIndex("Access.UserLogins", "UserId");
            CreateIndex("Access.UserClaims", "UserId");
            CreateIndex("Access.Accounts", "UpdatedByUserId");
            CreateIndex("Access.Accounts", "CreatedByUserId");
            AddForeignKey("Access.GroupRoles", "RoleId", "Access.Roles", "RoleId");
            AddForeignKey("Access.UserRoles", "RoleId", "Access.Roles", "RoleId");
            AddForeignKey("Access.UserGroups", "GroupId", "Access.Groups", "GroupId");
            AddForeignKey("Access.GroupRoles", "GroupId", "Access.Groups", "GroupId");
            AddForeignKey("Access.UserShops", "ShopId", "Access.Shops", "ShopId");
            AddForeignKey("Billing.Payments", "PaymentReceivedFromShopId", "Access.Shops", "ShopId");
            AddForeignKey("Access.Users", "ShopId", "Access.Shops", "ShopId");
            AddForeignKey("Repair.Orders", "ShopId", "Access.Shops", "ShopId");
            AddForeignKey("Access.UserShops", "UserId", "Access.Users", "UserId");
            AddForeignKey("Access.UserShops", "UpdatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Access.UserShops", "CreatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Access.UserGroups", "UserId", "Access.Users", "UserId");
            AddForeignKey("Access.UserGroups", "UpdatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Access.UserGroups", "CreatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Access.UserAccounts", "UserId", "Access.Users", "UserId");
            AddForeignKey("Access.UserAccounts", "UpdatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Access.UserAccounts", "CreatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Billing.PaymentTransactions", "UpdatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Billing.PaymentTransactions", "PaymentTransactionVoidByUserId", "Access.Users", "UserId");
            AddForeignKey("Billing.PaymentTransactions", "CreatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Billing.Payments", "UpdatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Billing.Payments", "PaymentVoidByUserId", "Access.Users", "UserId");
            AddForeignKey("Billing.Payments", "CreatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Support.NotificationTemplates", "UpdatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Support.NotificationTemplates", "CreatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Access.Logins", "UserId", "Access.Users", "UserId");
            AddForeignKey("Access.GroupRoles", "UpdatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Access.Groups", "UpdatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Access.Groups", "CreatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Access.GroupRoles", "CreatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Access.Accounts", "UpdatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Access.Accounts", "CreatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Repair.Orders", "UpdatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Scan.Requests", "UpdatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Scan.UploadXmls", "UpdatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Scan.UploadXmls", "CreatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Scan.RequestTypes", "UpdatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Scan.RequestTypes", "CreatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Scan.Reports", "UpdatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Scan.Reports", "ResponsibleTechnicianUserId", "Access.Users", "UserId");
            AddForeignKey("Scan.Reports", "InvoicedByUserId", "Access.Users", "UserId");
            AddForeignKey("Scan.Reports", "CreatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Scan.Reports", "CompletedByUserId", "Access.Users", "UserId");
            AddForeignKey("Scan.ReportsArchive", "UpdatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Scan.ReportsArchive", "ResponsibleTechnicianUserId", "Access.Users", "UserId");
            AddForeignKey("Scan.ReportsArchive", "InvoicedByUserId", "Access.Users", "UserId");
            AddForeignKey("Scan.ReportsArchive", "CreatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Scan.ReportsArchive", "CompletedByUserId", "Access.Users", "UserId");
            AddForeignKey("Scan.Requests", "CreatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Repair.Invoices", "UpdatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Repair.Invoices", "CreatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Repair.Orders", "CreatedByUserId", "Access.Users", "UserId");
            AddForeignKey("Access.UserRoles", "UserId", "Access.Users", "UserId");
            AddForeignKey("Access.UserLogins", "UserId", "Access.Users", "UserId");
            AddForeignKey("Access.UserClaims", "UserId", "Access.Users", "UserId");
            AddForeignKey("Access.UserAccounts", "AccountId", "Access.Accounts", "AccountId");
            AddForeignKey("Access.Shops", "AccountId", "Access.Accounts", "AccountId");
            AddForeignKey("Repair.Invoices", "InvoicedByUserId", "Access.Users", "UserId");

            SqlFile($"{ Assembly.GetExecutingAssembly().GetExecutingAssemblyPath() }/Migrations/201612302046303_v2.9.2_Rollback.sql");

        }
    }
}
